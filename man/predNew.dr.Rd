% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predNew.dr.R
\name{predNew.dr}
\alias{predNew.dr}
\title{Fitted Values at distributed Datasets Based on the Fitted Results from Likelihood Modeling}
\usage{
predNew.dr(fitted_par, formula, ddo_object, size = 1000, output)
}
\arguments{
\item{fitted_par}{object returned by drml function}

\item{formula}{an object of class "formula" (or one that can be coerced to that class): a symbolic description of the model to be fitted. The details of model specification are the same to the formula in lm.}
\item{ddo_object}{a ddo or ddf object initiated from HDFS connection or localDisk connection}
\item{size}{the number of samples drawn from the distribution of model parameters}

\item{output}{a "kvConnection" object indicating where the output data should reside (see localDiskConn, hdfsConn).}
}
\value{
0.025, 0.5, 0.975 quantiles of the distribution of fitted predict probability
}
\description{
predNew.dr is a function to provide the 0.025, 0.5, 0.975 quantiles of the distribution of fitted predict probability based on the fitted density of model parameters.
}
\examples{
\dontrun{
set.seed(100)
library(datadr)
x <- matrix(rnorm(1000*5), ncol=5)
ttheta <- rep(1,5)
y <- rbinom(1000, 1, 1 / (1 + exp(- x \%*\% ttheta)))
df <- cbind(y,x)
df <- as.data.frame(df)
names(df) <- c("y", "x1","x2","x3","x4","x5")

# local disk backend
tmpdir <- "./tmp"
 DiskConn <- localDiskConn(file.path(tmpdir, "KV"), autoYes = TRUE)
 addData(DiskConn, df_div)
 DiskConn <- ddf(DiskConn)
 DiskConn <- updateAttributes(DiskConn)
 rst<- drml(DiskConn, y~x1+x2, size =1000, burnin =50, approx_method = "SN") 
 DiskConn_output <- localDiskConn(file.path(tmpdir, "output1"), autoYes = TRUE)
 pred <- predNew.dr(rst, y~x1+x2, DiskConn, 1000, DiskConn_output)
 head(pred[[1]]$value)
 
 # HDFS backend
library(Rhipe)
 rhinit()
 seq.file <- list()
 seq.file[[1]] <-  list(2, df[1:500,])
 seq.file[[2]] <-  list(2, df[501:1000,])
 rhwrite(seq.file, file="/tmp/test1", chunk=1, kvpairs=T, verbose=F)
 
 HDFSconn <- hdfsConn("/tmp/test1", autoYes = TRUE)
 HDFSconn <- ddo(HDFSconn)
 HDFSconn <- updateAttributes(HDFSconn)
 rst<- drml(HDFSconn, y~x1+x2, size =1000, burnin =50, approx_method = "SN") 
 HDFSoutput <- hdfsConn("/tmp/output", autoYes = TRUE)
 pred <- predNew.dr(rst, y~x1+x2, HDFSconn, 1000, HDFSoutput)
 head(pred[[1]]$value)
}
}
\seealso{
\code{\link{predNew.local}}, \code{\link{datadr}}
}
